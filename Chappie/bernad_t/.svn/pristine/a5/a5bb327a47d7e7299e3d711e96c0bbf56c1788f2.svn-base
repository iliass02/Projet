#include "entete.h"

intmy_printf(char *str, ...)
{
  va_list ap;
  int i;
  
  t_fnc p_fnc[6] =
    {
      {'s', &aff_str },
      {'c', &aff_char },
      {'d', &aff_nbr },
      {'i', &aff_nbr },
      {'%', &aff_modulo },
      {'\0', NULL }
    };

  va_start(ap, str);

  while (*str != '\0')
    {
      if (*str == '%')
        {
	  for (i = 0; p_fnc[i].op != '\0'; i++)
	    {
	      if ((str[1]) == p_fnc[i].op)
		p_fnc[i].p(&ap);
	    }
	}
      else if (str[-1] != '%')
	{
	  my_putchar(*str);
	}
      str++;
    }
  va_end(ap);
  return 0;
}
*************************************************************
#ifndef __ENTETE_H__
#define __ENTETE_H__

#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
#include <stdarg.h>

int my_printf(char *str, ...);
void my_putchar(char c);
void my_putstr(char *str);
void my_put_nbr(int n);
void aff_str(va_list *ap);
void aff_nbr(va_list *ap);
void aff_char(va_list *ap);
void aff_modulo(va_list *ap);

typedef struct s_fnc
{
  char op;
  void (*p)(va_list *ap);
}
  t_fnc;


#endif
*****************************************************************
#include "entete.h"

void aff_str(va_list *ap)
{ 
  my_putstr(va_arg(*ap, char *));
}

void aff_nbr(va_list *ap)
{
  my_put_nbr(va_arg(*ap, int));
}

void aff_char(va_list *ap)
{
  my_putchar(va_arg(*ap, int));
}

void aff_modulo()
{
  my_putchar('%');
}
****************************************************************
